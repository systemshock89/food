{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/main.js","webpack:///./src/js/modules/calc.js","webpack:///./src/js/modules/cards.js","webpack:///./src/js/modules/forms.js","webpack:///./src/js/modules/modal.js","webpack:///./src/js/modules/slider.js","webpack:///./src/js/modules/tabs.js","webpack:///./src/js/modules/timer.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFa;;AAEb;;AAEA,iBAAiB,mBAAO,CAAC,gDAAgB;AACzC,gBAAgB,mBAAO,CAAC,kDAAiB;AACzC,gBAAgB,mBAAO,CAAC,kDAAiB;AACzC,gBAAgB,mBAAO,CAAC,kDAAiB;AACzC,eAAe,mBAAO,CAAC,gDAAgB;AACvC,gBAAgB,mBAAO,CAAC,kDAAiB;AACzC,iBAAiB,mBAAO,CAAC,oDAAkB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,E;;;;;;;;;;;ACpBD;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,mBAAmB;AACnB;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;AAEA,4BAA4B;AAC5B,aAAa;AACb,SAAS;AACT;;AAEA,2EAA2E;AAC3E,4FAA4F;;AAE5F;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB;AACxB,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA,sB;;;;;;;;;;;ACvHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA,+BAA+B;AAC/B,+BAA+B;AAC/B;;AAEA,uBAAuB;AACvB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA,uBAAuB,SAAS,OAAO,SAAS;AAChD,8CAA8C,WAAW;AACzD,4CAA4C,WAAW;AACvD;AACA;AACA;AACA,sDAAsD,WAAW;AACjE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+CAA+C,IAAI,YAAY,WAAW,GAAG;AAC7E;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;;AAEnB;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA,+BAA+B,iCAAiC,M;AAChE;AACA,YAAY;AACZ,QAAQ;;AAER;AACA;AACA;;AAEA;AACA,2BAA2B,iCAAiC;AAC5D;AACA;;AAEA;AACA;AACA,8BAA8B,IAAI,OAAO,OAAO;AAChD,qDAAqD,MAAM;AAC3D,mDAAmD,MAAM;AACzD;AACA;AACA;AACA,6DAA6D,MAAM;AACnE;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uB;;;;;;;;;;;ACzHA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;;AAET;AACA;AACA,gCAAgC;AAChC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA,+BAA+B;AAC/B;AACA;AACA,iBAAiB,eAAe;AAChC;AACA,iBAAiB;AACjB;AACA,iBAAiB;;AAEjB,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,iBAAiB;AACjB,+BAA+B;AAC/B;AACA;AACA,iBAAiB,eAAe;AAChC;AACA,iBAAiB;AACjB;AACA,iBAAiB;;AAEjB,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;;AAEb,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,aAAa;;AAEb,SAAS;;AAET;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D,4CAA4C,QAAQ;AACpD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,uB;;;;;;;;;;;AC5OA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,oCAAoC;AACpC;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,iDAAiD;AACjD;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uB;;;;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA,gCAAgC,cAAc;AAC9C,kCAAkC,WAAW;AAC7C,KAAK;AACL;AACA;AACA;;AAEA,wDAAwD;AACxD;AACA;;AAEA;;AAEA;AACA,kCAAkC;AAClC,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,qEAAqE;AACrE;AACA,SAAS,OAAO;AAChB;AACA;AACA;AACA,qDAAqD,OAAO;;AAE5D;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS,OAAO;AAChB;AACA;AACA,qDAAqD,OAAO;;AAE5D;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA,yDAAyD,OAAO;;AAEhE;;AAEA;;AAEA,SAAS;AACT,KAAK;;AAEL;AACA;AACA,sCAAsC,WAAW;AACjD,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8BAA8B;;AAE9B;AACA,mCAAmC,cAAc;AACjD,QAAQ;AACR;AACA;;AAEA,8BAA8B;;AAE9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,+D;AACA;;AAEA;AACA,yCAAyC,WAAW;AACpD,YAAY;AACZ;AACA,Y;AACA;;AAEA;AACA,wCAAwC;AACxC;;AAEA;AACA;AACA,QAAQ;;AAER;AACA;AACA,QAAQ;AACR;AACA;;AAEA,wB;;;;;;;;;;;ACtLA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa;;AAEb;;AAEA,KAAK;AACL;;AAEA,sB;;;;;;;;;;;AC7CA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gDAAgD;;AAEhD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uB","file":"script.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/main.js\");\n","\"use strict\";\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n\r\n    const tabs = require('./modules/tabs'),\r\n        modal = require('./modules/modal'),\r\n        timer = require('./modules/timer'),\r\n        cards = require('./modules/cards'),\r\n        calc = require('./modules/calc'),\r\n        forms = require('./modules/forms'),\r\n        slider = require('./modules/slider');\r\n\r\n    tabs();\r\n    modal();\r\n    timer();\r\n    cards();\r\n    calc();\r\n    forms();\r\n    slider();\r\n\r\n});","function calc() {\r\n    // Calc\r\n    const result = document.querySelector('.calculating__result span');\r\n    let sex, height, weight, age, ratio;\r\n\r\n    if (localStorage.getItem('sex')) {\r\n        sex = localStorage.getItem('sex');\r\n    } else {\r\n        // установим дефолтные значения для sex и ratio, т.к. в макете они активны\r\n        // и запишем их в localStorage\r\n        sex = 'female';\r\n        localStorage.setItem('sex', 'female');\r\n    }\r\n\r\n    if (localStorage.getItem('ratio')) {\r\n        ratio = localStorage.getItem('ratio');\r\n    } else {\r\n        ratio = 1.375;\r\n        localStorage.setItem('ratio', 1.375);\r\n    }\r\n\r\n    // ф-я инициализирует активные элементы в соответствии с данными из localStorage\r\n    function initLocalSettings(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.classList.remove(activeClass);\r\n\r\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n\r\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n        });\r\n    }\r\n\r\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    // пересчитывает рез-т\r\n    function calcTotal() {\r\n        // если каких-то данных недостает\r\n        if (!sex || !height || !weight || !age || !ratio) {\r\n            result.textContent = '____'; // то выводим пустую строку\r\n            return; // и преращаем работу ф-и\r\n        }\r\n\r\n        if (sex === 'female') {\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } else {\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n    }\r\n\r\n    calcTotal();\r\n\r\n    // получение инф-ции со статических блоков\r\n    function getStaticInformation(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.addEventListener('click', (e) => {\r\n\r\n                if (e.target.getAttribute('data-ratio')) {\r\n                    ratio = +e.target.getAttribute('data-ratio');\r\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n                } else {\r\n                    sex = e.target.getAttribute('id');\r\n                    localStorage.setItem('sex', e.target.getAttribute('id'));\r\n                }\r\n\r\n                elements.forEach(elem => elem.classList.remove(activeClass));\r\n                e.target.classList.add(activeClass);\r\n\r\n                calcTotal(); // пересчитаем рез-т\r\n            });\r\n        });\r\n    }\r\n\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active'); // для пола\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active'); // для физ. активности\r\n\r\n    // получение динам-й инф-ции с инпутов\r\n    function getDynamicInformation(selector) {\r\n        const input = document.querySelector(selector);\r\n\r\n        input.addEventListener('input', () => {\r\n\r\n            // Валидация. если введены не числа\r\n            if (input.value.match(/\\D/g)) {\r\n                input.style.border = '1px solid red';\r\n            } else {\r\n                input.style.border = 'none';\r\n            }\r\n\r\n            switch (input.getAttribute('id')) {\r\n                case 'height':\r\n                    height = +input.value;\r\n                    break;\r\n                case 'weight':\r\n                    weight = +input.value;\r\n                    break;\r\n                case 'age':\r\n                    age = +input.value;\r\n                    break;\r\n            }\r\n\r\n            calcTotal(); // пересчитаем рез-т\r\n        });\r\n    }\r\n\r\n    getDynamicInformation('#height');\r\n    getDynamicInformation('#weight');\r\n    getDynamicInformation('#age');\r\n    // /Calc\r\n}\r\n\r\nmodule.exports = calc;","function cards() {\r\n    // Используем классы для карточек\r\n    class MenuCard {\r\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) {\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes; // rest элемент для того чтобы передавать несколько классов\r\n            this.parent = document.querySelector(parentSelector);\r\n            this.transfer = 27; // курс валют\r\n            this.changeToUAH(); // можно ковертиацию вызвать здесь\r\n        }\r\n\r\n        changeToUAH() { // ковертация $ в гривны\r\n            this.price = this.price * this.transfer;\r\n        }\r\n\r\n        render() {\r\n            const element = document.createElement('div');\r\n\r\n            // если никакой класс не был передан, то присвоим класс по дефолту\r\n            if (this.classes.length === 0) {\r\n                this.element = 'menu__item';\r\n                element.classList.add(this.element);\r\n            } else {\r\n                this.classes.forEach(className => element.classList.add(className));\r\n            }\r\n\r\n            element.innerHTML = `\r\n            <img src=${this.src} alt=${this.alt}>\r\n            <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n            <div class=\"menu__item-descr\">${this.descr}</div>\r\n            <div class=\"menu__item-divider\"></div>\r\n            <div class=\"menu__item-price\">\r\n                <div class=\"menu__item-cost\">Цена:</div>\r\n                <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n            </div>\r\n        `;\r\n\r\n            this.parent.append(element);\r\n        }\r\n    }\r\n\r\n    // получим данные карточек\r\n    const getResource = async (url, data) => {\r\n        const res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`); // объект ошибки\r\n            // оператор throw выкидывает новую ошибку\r\n        }\r\n\r\n        return await res.json();\r\n    };\r\n\r\n    getResource('http://localhost:3000/menu')\r\n        .then(data => {\r\n            data.forEach(({\r\n                img,\r\n                altimg,\r\n                title,\r\n                descr,\r\n                price\r\n            }) => { // используем деструктуризацию объекта. (вытащим св-ва)\r\n\r\n                // надо передать в конструктор все св-ва объекта: obj.img, obj.alt и тд\r\n                // но лучше исп-ть деструктуризацию объекта\r\n                new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n            });\r\n        });\r\n\r\n    // получим данные карточек (с помощью биб-ки axios)\r\n    // возвращается более подробный ответ и data уже сконвертирована в массив\r\n    // axios.get('http://localhost:3000/menu')\r\n    // .then(data => {\r\n    //     data.data.forEach(({img, altimg, title, descr, price}) => { \r\n    //         new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n    //     });\r\n    // });\r\n\r\n    // еще способ (когда не нужна шаблонизация, например, если необходимо только один раз что-то построить) c помощью ф-и createCard\r\n    // getResource('http://localhost:3000/menu')\r\n    // .then(data => createCard(data));\r\n\r\n    // function createCard(data){\r\n    //     data.forEach( ({img, altimg, title, descr, price}) => {\r\n    //         const element = document.createElement('div');\r\n    //         price = price * 27;\r\n\r\n    //         element.classList.add('menu__item');\r\n    //         element.innerHTML = `\r\n    //             <img src=${img} alt=${altimg}>\r\n    //             <h3 class=\"menu__item-subtitle\">${title}</h3>\r\n    //             <div class=\"menu__item-descr\">${descr}</div>\r\n    //             <div class=\"menu__item-divider\"></div>\r\n    //             <div class=\"menu__item-price\">\r\n    //                 <div class=\"menu__item-cost\">Цена:</div>\r\n    //                 <div class=\"menu__item-total\"><span>${price}</span> грн/день</div>\r\n    //             </div>\r\n    //         `;\r\n\r\n    //         document.querySelector('.menu .container').append(element);\r\n    //     });\r\n    // }\r\n\r\n    // вручную заполняем конструктор с карточками данными (нужно повторить столько раз, сколько карточек)\r\n    // испльзуем объект на месте, поэтому сократим запись 'const item ='\r\n    // new MenuCard(\r\n    //     \"img/tabs/vegy.jpg\", \r\n    //     \"vegy\", \r\n    //     'Меню \"Фитнес\"',\r\n    //     'Меню \"Фитнес\" - это новый подход к приготовлению блюд: больше свежих овощей и фруктов. Продукт активных и здоровых людей. Это абсолютно новый продукт с оптимальной ценой и высоким качеством!',\r\n    //     9,\r\n    //     \".menu .container\",\r\n    //     // \"menu__item\"\r\n    //     ).render();\r\n    // /Используем классы для карточек\r\n}\r\n\r\nmodule.exports = cards;","function forms() {\r\n    // Forms\r\n    // вариант ajax использующий XMLHttpRequest\r\n    const forms = document.querySelectorAll('form');\r\n\r\n    const message = {\r\n        loading: 'img/form/spinner.svg',\r\n        success: 'Спасибо! Скоро мы с Вами свяжемся',\r\n        failture: 'Что-то пошло не так...'\r\n    };\r\n\r\n    forms.forEach(item => {\r\n        // postDataFormData(item);\r\n        bindPostData(item);\r\n    });\r\n\r\n    const postData = async (url, data) => {\r\n\r\n        // это ассинхронный код (не знаем, через сколько вернется ответ от сервера)\r\n        // (fetch может не успеет выполнится, а res присвоится ничего) \r\n        // для этого перед ф-ей ставим оператор async\r\n        // await - его парный оператор, который ставим перед теми операциями, кот-е необходимо дождаться\r\n        const res = await fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: data\r\n        });\r\n\r\n        // здесь тоже возвращается промис и тоже нужно дождать результа промиса прежде чем \r\n        // выполнять return \r\n        return await res.json(); // преобразуем ответ в json\r\n    };\r\n\r\n    // отправляем данные в формате json\r\n    // Метод Fetch\r\n    function bindPostData(form) {\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n\r\n            // spinner\r\n            const statusMessage = document.createElement('img');\r\n            statusMessage.src = message.loading;\r\n            statusMessage.style.cssText = `\r\n                display: block;\r\n                margin: 0 auto;\r\n            `;\r\n            form.insertAdjacentElement('afterend', statusMessage);\r\n\r\n            // соберем все данные с формы в формат FormData\r\n            // ! у всех input-ов обязательно должен быть атрибут name\r\n            const formData = new FormData(form);\r\n\r\n            // из FormData получим обычный объект (новый способ)\r\n            // Сначала FormData превращаем в массив массивов (матрицу): ['сво-во', значение]. с помощью entries()\r\n            // Затем превращаем ее в объект (Object)\r\n            // А после объект превращаем в json Object.fromEntries()\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n\r\n            // из FormData получим обычный объект (классический способ перебора)\r\n            // const object = {};\r\n            // formData.forEach(function(value, key){\r\n            //     object[key] = value;\r\n            // });\r\n            // затем из объекта получим json JSON.stringify(object) и передадим его в ф-ю postData\r\n\r\n            postData('http://localhost:3000/requests', json)\r\n                .then(data => { // если ok\r\n                    showThanksModal(message.success);\r\n                    statusMessage.remove();\r\n                }).catch(() => { // если ошибка\r\n                    showThanksModal(message.failture);\r\n                }).finally(() => {\r\n                    form.reset();\r\n                });\r\n\r\n        });\r\n    }\r\n\r\n    // отправляем данные в формате FormData\r\n    // Метод Fetch\r\n    function postDataFetchFormData(form) {\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n\r\n            // spinner\r\n            const statusMessage = document.createElement('img');\r\n            statusMessage.src = message.loading;\r\n            statusMessage.style.cssText = `\r\n                display: block;\r\n                margin: 0 auto;\r\n            `;\r\n            form.insertAdjacentElement('afterend', statusMessage);\r\n\r\n            // соберем все данные с формы в формат FormData\r\n            // ! у всех input-ов обязательно должен быть атрибут name\r\n            const formData = new FormData(form);\r\n\r\n            fetch('server.php', {\r\n                    method: 'POST',\r\n                    // headers: {\r\n                    //     'Content-type': 'application/json'\r\n                    // },\r\n                    body: formData\r\n                }).then((data) => data.text()) // преобразовали данные ответа сервера в текст\r\n                .then(data => { // если ok\r\n                    showThanksModal(message.success);\r\n                    statusMessage.remove();\r\n                }).catch(() => { // если ошибка\r\n                    showThanksModal(message.failture);\r\n                }).finally(() => {\r\n                    form.reset();\r\n                });\r\n\r\n        });\r\n    }\r\n\r\n    // отправляем данные в формате json\r\n    // Устар. метод XMLHttpRequest\r\n    function postDataXMLHttpRequestJson(form) {\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n\r\n            const statusMessage = document.createElement('img');\r\n            statusMessage.src = message.loading;\r\n            statusMessage.style.cssText = `\r\n                display: block;\r\n                margin: 0 auto;\r\n            `;\r\n            form.insertAdjacentElement('afterend', statusMessage);\r\n\r\n            const request = new XMLHttpRequest();\r\n            request.open('POST', 'server.php');\r\n\r\n            request.setRequestHeader('Content-type', 'application/json');\r\n\r\n            // соберем все данные с формы в формат FormData\r\n            // ! у всех input-ов обязательно должен быть атрибут name\r\n            const formData = new FormData(form);\r\n\r\n            // из FormData получим обычный объект \r\n            const object = {};\r\n            formData.forEach(function (value, key) {\r\n                object[key] = value;\r\n            });\r\n\r\n            // из объекта получим json\r\n            const json = JSON.stringify(object);\r\n\r\n            request.send(json);\r\n\r\n            request.addEventListener('load', () => {\r\n                if (request.status === 200) {\r\n                    showThanksModal(message.success);\r\n                    form.reset();\r\n                    statusMessage.remove();\r\n                } else {\r\n                    showThanksModal(message.failture);\r\n                }\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    // отправляем данные в формате FormData\r\n    // Устар. метод XMLHttpRequest\r\n    function postDataXMLHttpRequestFormData(form) {\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n\r\n            const statusMessage = document.createElement('div');\r\n            statusMessage.classList.add('status');\r\n            statusMessage.textContent = message.loading;\r\n            form.append(statusMessage);\r\n\r\n            const request = new XMLHttpRequest();\r\n            request.open('POST', 'server.php');\r\n\r\n            // если отправляем заголовок, то получаем Missing boundary in multipart/form-data POST data in \r\n            // решение: не отправлять заголовок вовсе, он устанавливается автоматически\r\n            // https://inoyakaigor.ru/blog/94\r\n            // request.setRequestHeader('Content-type', 'multipart/form-data');\r\n\r\n            // соберем все данные с формы в формат FormData\r\n            // ! у всех input-ов обязательно должен быть атрибут name\r\n            const formData = new FormData(form);\r\n\r\n            // если в openserver HTTP apache, то получаем ошибку.\r\n            // Нужно поставить Nginx 1.12 или apache + nginx\r\n            request.send(formData);\r\n\r\n            request.addEventListener('load', () => {\r\n                if (request.status === 200) {\r\n                    statusMessage.textContent = message.success;\r\n                    form.reset();\r\n                    setTimeout(() => {\r\n                        statusMessage.remove();\r\n                    }, 2000);\r\n                } else {\r\n                    statusMessage.textContent = message.failture;\r\n                }\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n\r\n    // ф-я показывающая сообщения после отправки формы\r\n    function showThanksModal(message) {\r\n        const prevModalDialog = document.querySelector('.modal__dialog');\r\n\r\n        prevModalDialog.classList.add('hide');\r\n        openModal();\r\n\r\n        const thanksModal = document.createElement('div');\r\n        thanksModal.classList.add('modal__dialog');\r\n        thanksModal.innerHTML = `\r\n            <div class=\"modal__content\">\r\n                <div data-close class=\"modal__close\">&times;</div>\r\n                <div class=\"modal__title\">${message}</div>\r\n            </div>\r\n        `;\r\n\r\n        document.querySelector('.modal').append(thanksModal);\r\n\r\n        // спустя 4 сек убирать сообщение и возвращать форму к изначальному состоянию\r\n        setTimeout(() => {\r\n            thanksModal.remove();\r\n            prevModalDialog.classList.add('show');\r\n            prevModalDialog.classList.remove('hide');\r\n            closeModal();\r\n        }, 4000);\r\n    }\r\n}\r\n\r\nmodule.exports = forms;","function modal() {\r\n    // Modal\r\n    const modalTrigger = document.querySelectorAll('[data-modal]'),\r\n        modal = document.querySelector('.modal');\r\n\r\n    function openModal() {\r\n        modal.classList.add('show');\r\n        modal.classList.remove('hide');\r\n        // modal.classList.toggle('show');\r\n        document.body.style.overflow = 'hidden'; // убираем прокрутку страницы про открытом попапе\r\n        clearInterval(modalTimerId); // если пользователь сам открыл попап, то уже не показываем ему попап снова через 5 сек\r\n    }\r\n\r\n    modalTrigger.forEach(btn => {\r\n        btn.addEventListener('click', openModal);\r\n    });\r\n\r\n    function closeModal() {\r\n        modal.classList.add('hide');\r\n        modal.classList.remove('show');\r\n        // modal.classList.toggle('show');\r\n        document.body.style.overflow = '';\r\n    }\r\n\r\n    // при клике на подложку, либо при клике на крестик закрываем окно\r\n    modal.addEventListener('click', (e) => {\r\n        if (e.target === modal || e.target.getAttribute('data-close') == '') {\r\n            closeModal();\r\n        }\r\n    });\r\n\r\n    // закрываем окно при нажатии на клавишу Escape\r\n    document.addEventListener('keydown', (e) => { // keyDown - срабатывает когда нажимается кнопка\r\n        if (e.code === 'Escape' && modal.classList.contains('show')) {\r\n            closeModal();\r\n        }\r\n    });\r\n\r\n    // показывать попап через 50 сек после открытия страницы\r\n    const modalTimerId = setTimeout(openModal, 50000);\r\n\r\n    function showModalByScroll() {\r\n        // pageYOffset - сколько px отлистал пользователь по оси Y\r\n        // document.documentElement.clientHeight - видимая часть, кот-ю видим на данный момент на сайте без прокрутки\r\n        // document.documentElement.scrollHeight - высота с учетом прокрутки\r\n        // в конце добавим -1px, тк на некоторых мониторах и браузерах без этого не срабатывает\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight - 1) {\r\n            openModal();\r\n\r\n            // как только один раз пользователь долистал до конца и ему показался попап, обработчик удаляется, чтоб больше попап не показывался\r\n            window.removeEventListener('scroll', showModalByScroll);\r\n        }\r\n    }\r\n\r\n    // когда пользователь долистает до самого конца страницы - показать попап\r\n    window.addEventListener('scroll', showModalByScroll);\r\n}\r\n\r\nmodule.exports = modal;","function slider() {\r\n    // Slider variant 2\r\n    const slides = document.querySelectorAll('.offer__slide'),\r\n        slider = document.querySelector('.offer__slider'),\r\n        prev = document.querySelector('.offer__slider-prev'),\r\n        next = document.querySelector('.offer__slider-next'),\r\n        total = document.querySelector('#total'),\r\n        current = document.querySelector('#current'),\r\n        slidesWrapper = document.querySelector('.offer__slider-wrapper'),\r\n        slidesField = document.querySelector('.offer__slider-inner'),\r\n        width = window.getComputedStyle(slidesWrapper).width;\r\n    let slideIndex = 1;\r\n    let offset = 0; // отступ, чтобы знать, на сколько отступили вправо/влево\r\n\r\n    if (slides.length < 10) {\r\n        total.textContent = `0${slides.length}`;\r\n        current.textContent = `0${slideIndex}`;\r\n    } else {\r\n        total.textContent = slides.length;\r\n        current.textContent = slideIndex;\r\n    }\r\n\r\n    slidesField.style.width = 100 * slides.length + '%'; // ширина = кол-во слайдов * 100%, чтобы все слайды поместились в этом блоке\r\n    slidesField.style.display = 'flex';\r\n    slidesField.style.transition = '0.5s all';\r\n\r\n    slidesWrapper.style.overflow = 'hidden';\r\n\r\n    slides.forEach(slide => {\r\n        slide.style.width = width; // чтобы все слайды были одинаковой ширины\r\n    });\r\n\r\n    // dots\r\n    slider.style.position = 'relative';\r\n    const indicators = document.createElement('ol'),\r\n        dots = [];\r\n    indicators.classList.add('carousel-indicators');\r\n    slider.append(indicators);\r\n\r\n    for (let i = 0; i < slides.length; i++) {\r\n        const dot = document.createElement('li');\r\n        dot.setAttribute('data-slide-to', i + 1);\r\n        dot.classList.add('dot');\r\n        indicators.append(dot);\r\n\r\n        // активный эл-т\r\n        if (i == 0) {\r\n            dot.style.opacity = 1;\r\n        }\r\n\r\n        dots.push(dot); // получим массив \r\n    }\r\n    // /dots\r\n\r\n    // регулярка: все Не числа в строке заменить на 'пусто', получив число\r\n    function deleteNotDigits(str) {\r\n        return +str.replace(/\\D/g, '');\r\n    }\r\n\r\n    next.addEventListener('click', () => {\r\n        // если долистали до самого конца, то возвратимся в начало\r\n        if (offset == deleteNotDigits(width) * (slides.length - 1)) { // width превратим в число и отрежем px\r\n            offset = 0;\r\n        } else { // если слайд не последний, то смещаем на ширину одного слайда\r\n            offset += deleteNotDigits(width);\r\n            // offset += +width.slice(0, width.length - 2);\r\n        }\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == slides.length) {\r\n            slideIndex = 1;\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n\r\n        setCurrent(slides);\r\n\r\n        setActiveDot(dots);\r\n    });\r\n\r\n    prev.addEventListener('click', () => {\r\n        // если долистали до самого начала, то возвратимся в конец слайдера\r\n        if (offset == 0) {\r\n            offset = deleteNotDigits(width) * (slides.length - 1);\r\n        } else { // если слайд не первый, то смещаем на ширину одного слайда\r\n            offset -= deleteNotDigits(width);\r\n        }\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == 1) {\r\n            slideIndex = slides.length;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n\r\n        setCurrent(slides);\r\n\r\n        setActiveDot(dots);\r\n    });\r\n\r\n    dots.forEach(dot => {\r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = e.target.getAttribute('data-slide-to');\r\n            slideIndex = slideTo;\r\n\r\n            offset = deleteNotDigits(width) * (slideTo - 1);\r\n            slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n            setCurrent(slides);\r\n\r\n            setActiveDot(dots);\r\n\r\n        });\r\n    });\r\n\r\n    function setCurrent(slides) {\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n    }\r\n\r\n    function setActiveDot(dots) {\r\n        dots.forEach(dot => dot.style.opacity = '.5');\r\n        dots[slideIndex - 1].style.opacity = '1';\r\n    }\r\n    // Slider variant 2\r\n\r\n\r\n    // Slider variant 1\r\n    // const slides = document.querySelectorAll('.offer__slide'),\r\n    //       prev = document.querySelector('.offer__slider-prev'),\r\n    //       next = document.querySelector('.offer__slider-next'),\r\n    //       total = document.querySelector('#total'),\r\n    //       current = document.querySelector('#current');\r\n    // let slideIndex = 1;\r\n\r\n    // showSlides(slideIndex); // инициализируем слайдер, передав туда начальное знач-е slideIndex\r\n\r\n    // if(slides.length < 10) {\r\n    //     total.textContent = `0${slides.length}`;\r\n    // } else {\r\n    //     total.textContent = slides.length;\r\n    // }\r\n\r\n    // function showSlides(n){ // n - slideIndex\r\n\r\n    //     // если ушли в правую границу слайдера, то перемещаемся в начало\r\n    //     if(n > slides.length){\r\n    //         slideIndex = 1;\r\n    //     }\r\n\r\n    //     // если ушли в левую границу, то перемещаемся в конец слайдера\r\n    //     if(n < 1){\r\n    //         slideIndex = slides.length;\r\n    //     }\r\n\r\n    //     slides.forEach(item => item.style.display = 'none');       \r\n    //     slides[slideIndex - 1].style.display = 'block';\r\n\r\n    //     if(slides.length < 10) {\r\n    //         current.textContent = `0${slideIndex}`;\r\n    //     } else {\r\n    //         current.textContent = slideIndex;\r\n    //     }        \r\n    // }\r\n\r\n    // function plusSlides(n){\r\n    //     showSlides( slideIndex += n); // slideIndex увеличен на значение n, либо уменьшен\r\n    // }\r\n\r\n    // prev.addEventListener('click', () => {\r\n    //     plusSlides(-1);\r\n    // });\r\n\r\n    // next.addEventListener('click', () => {\r\n    //     plusSlides(+1);\r\n    // });\r\n    // /Slider variant 1\r\n}\r\n\r\nmodule.exports = slider;","function tabs() {\r\n    // Tabs\r\n    const tabs = document.querySelectorAll('.tabheader__item'),\r\n        tabsContent = document.querySelectorAll('.tabcontent'),\r\n        tabsParent = document.querySelector('.tabheader__items');\r\n\r\n    function hideTabContent() {\r\n        tabsContent.forEach(item => {\r\n            item.classList.add('hide');\r\n            item.classList.remove('show', 'fade');\r\n            // item.style.display = 'none';\r\n        });\r\n\r\n        tabs.forEach(item => {\r\n            item.classList.remove('tabheader__item_active');\r\n        });\r\n    }\r\n\r\n    function showTabContent(i = 0) {\r\n        tabsContent[i].classList.add('show', 'fade');\r\n        tabsContent[i].classList.remove('hide');\r\n        // tabsContent[i].style.display = 'block';\r\n        tabs[i].classList.add('tabheader__item_active');\r\n    }\r\n\r\n    hideTabContent();\r\n    showTabContent();\r\n\r\n    tabsParent.addEventListener('click', (event) => {\r\n        const target = event.target;\r\n\r\n        if (target && target.classList.contains('tabheader__item')) {\r\n            tabs.forEach((item, i) => {\r\n                if (target == item) {\r\n                    hideTabContent();\r\n                    showTabContent(i);\r\n                }\r\n\r\n            });\r\n\r\n        }\r\n\r\n    });\r\n}\r\n\r\nmodule.exports = tabs;","function timer() {\r\n    // Timer\r\n    const deadline = '2023-05-11';\r\n\r\n    function getTimeRemaining(endtime) {\r\n        let days, hours, minutes, seconds;\r\n        const t = Date.parse(endtime) - Date.parse(new Date());\r\n\r\n        if (t <= 0) {\r\n            days = 0;\r\n            hours = 0;\r\n            minutes = 0;\r\n            seconds = 0;\r\n\r\n        } else {\r\n            // Math.floor округление до ближайшего целого\r\n            // (1000 * 60 * 60 * 24) сколько в сутках миллисекунд\r\n            days = Math.floor(t / (1000 * 60 * 60 * 24));\r\n\r\n            // 1000 * 60 * 60 делим на кол-во миллисекунд в одном часе\r\n            // чтобы не получить 100 часов, нужно исп-ть %\r\n            // % делит на 24 и возвращает остаток от деления\r\n            hours = Math.floor((t / (1000 * 60 * 60)) % 24);\r\n            minutes = Math.floor((t / 1000 / 60) % 60);\r\n            seconds = Math.floor((t / 1000) % 60);\r\n        }\r\n\r\n        return {\r\n            'total': t,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n\r\n        };\r\n    }\r\n\r\n    // подсталяем 0 к цифрам, если они < 10, чтобы было напр 01\r\n    function getZero(num) {\r\n        if (num >= 0 && num < 10) {\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n    function setClock(selector, endtime) {\r\n        const timer = document.querySelector(selector),\r\n            days = timer.querySelector('#days'),\r\n            hours = timer.querySelector('#hours'),\r\n            minutes = timer.querySelector('#minutes'),\r\n            seconds = timer.querySelector('#seconds'),\r\n            timeInterval = setInterval(updateClock, 1000);\r\n\r\n        // чтобы не было мигания верстки с цифрами из верстки (тк по интервалу эта ф-я запустится только через 1 сек)\r\n        updateClock();\r\n\r\n        function updateClock() {\r\n            const t = getTimeRemaining(endtime); // разница между планируемым временем и текущим\r\n\r\n            days.innerHTML = getZero(t.days);\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n\r\n            if (t.total <= 0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n    }\r\n\r\n    setClock('.timer', deadline);\r\n}\r\n\r\nmodule.exports = timer;"],"sourceRoot":""}